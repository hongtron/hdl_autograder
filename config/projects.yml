1:
  feedback_template: |-
    Intro to Computer Systems :: Project 1 :: Logic Gates

    Grading method: The implementation of some chips was described in the book,
    and some chips are simpler than others. The different weights assigned to
    the chips below reflect this variance.  If the chip passes all the tests
    specified in the supplied test script, it receives two-thirds of its
    allotted points. The remaining third reflects our evaluation of the way the
    chip is built.

    Generally speaking, we prefer implementations that use as few chip parts as
    possible, even if it implies a less efficient chip design.

    Chip                Working?            Well built?         Comments
  chips:
    -
      name: "Not"
      acceptable_part_counts: 1
      points:
        functionality: 3
        quality: 1
    -
      name: "And"
      acceptable_part_counts: 2
      points:
        functionality: 3
        quality: 1
    -
      name: "Or"
      acceptable_part_counts: 3
      points:
        functionality: 4
        quality: 2
    -
      name: "Xor"
      acceptable_part_counts: [3, 4, 5]
      points:
        functionality: 4
        quality: 2
    -
      name: "Not16"
      acceptable_part_counts: 16
      points:
        functionality: 3
        quality: 2
    -
      name: "And16"
      acceptable_part_counts: 16
      points:
        functionality: 3
        quality: 2
    -
      name: "Or16"
      acceptable_part_counts: 16
      exceptional_part_count: 4
      points:
        functionality: 3
        quality: 2
    -
      name: "Or8Way"
      acceptable_part_counts: 7
      points:
        functionality: 5
        quality: 3
    -
      name: "Mux"
      acceptable_part_counts: 4
      points:
        functionality: 5
        quality: 3
    -
      name: "DMux"
      acceptable_part_counts: 3
      exceptional_part_count: 2
      points:
        functionality: 5
        quality: 3
    -
      name: "Mux16"
      acceptable_part_counts: 16
      points:
        functionality: 3
        quality: 2
    -
      name: "Mux4Way16"
      acceptable_part_counts: 3
      points:
        functionality: 6
        quality: 3
    -
      name: "Mux8Way16"
      acceptable_part_counts: [3, 7]
      points:
        functionality: 6
        quality: 3
    -
      name: "DMux4Way"
      acceptable_part_counts: 3
      points:
        functionality: 6
        quality: 3
    -
      name: "DMux8Way"
      acceptable_part_counts: [3, 7]
      points:
        functionality: 6
        quality: 3
2:
  feedback_template: |-
    Intro to Computer Systems :: Project 2 :: Combinational Chips

    Grading method: The implementation of some chips was described in the
    book, and some chips are simpler than others. The different weights
    assigned to the chips below reflect this variance.  If the chip passes
    all the tests specified in the supplied test script, it receives two
    thirds of its allotted points. The remaining third reflects our
    evaluation of the way the chip is built (we generally prefer
    implementations that use as few parts as possible, since additional
    parts can tax performance and be cost-ineffective).

    Generally speaking, we prefer implementations that use as few chip parts as
    possible, even if it implies a less efficient chip design.

    Chip                Working?            Well built?         Comments
  chips:
    -
      name: "HalfAdder"
      acceptable_part_counts: 2
      points:
        functionality: 6
        quality: 3
    -
      name: "FullAdder"
      acceptable_part_counts: 3
      points:
        functionality: 8
        quality: 4
    -
      name: "Add16"
      acceptable_part_counts: 16
      points:
        functionality: 8
        quality: 4
    -
      name: "Inc16"
      acceptable_part_counts: 1
      points:
        functionality: 10
        quality: 5
    -
      name: "ALU"
      acceptable_part_counts: [13, 15]
      points:
        functionality: 35
        quality: 17

3:
  feedback_template: |-
    Intro to Computer Systems :: Project 3 :: Sequential Chips

    Grading method: The implementation of some chips was described in the book,
    and some chips are simpler than others. The different weights assigned to
    the chips below reflect this variance.  If the chip passes all the tests
    specified in the supplied test script, it receives two thirds of its
    allotted points. The remaining third reflects our evaluation of the way the
    chip is built.

    Generally speaking, we prefer implementations that use as few chip parts as
    possible, even if it implies a less efficient chip design.

    Chip                Working?            Well built?         Comments
  chips:
    -
      name: "Bit"
      acceptable_part_counts: "unknown"
      points:
        functionality: 7
        quality: 3
    -
      name: "Register"
      acceptable_part_counts: "unknown"
      points:
        functionality: 7
        quality: 3
    -
      name: "RAM8"
      acceptable_part_counts: "unknown"
      points:
        functionality: 13
        quality: 6
    -
      name: "RAM64"
      acceptable_part_counts: "unknown"
      points:
        functionality: 13
        quality: 6
    -
      name: "RAM512"
      acceptable_part_counts: "unknown"
      points:
        functionality: 5
        quality: 3
    -
      name: "RAM4K"
      acceptable_part_counts: "unknown"
      points:
        functionality: 5
        quality: 3
    -
      name: "RAM16K"
      acceptable_part_counts: "unknown"
      points:
        functionality: 5
        quality: 3
    -
      name: "PC"
      acceptable_part_counts: "unknown"
      points:
        functionality: 12
        quality: 6

5:
  feedback_template: |-
    Intro to Computer Systems :: Project 5 :: Computer Architecture

    Grading method: The implementation of some chips was described in the
    book, and some chips are simpler than others. The different weights
    assigned to the chips below reflect this variance.  If the chip passes
    all the tests specified in the supplied test script, it receives two
    thirds of its allotted points. The remaining third reflects our
    evaluation of the way the chip is built (we generally prefer
    implementations that use as few parts as possible, since additional
    parts can tax performance and be cost-ineffective).

    Generally speaking, we prefer implementations that use as few chip parts as
    possible, even if it implies a less efficient chip design.

    Chip                Working?            Well built?         Comments
  additional_builtins:
    - "CPU"
    - "Memory"
  load_hack_programs: true
  chips:
    -
      name: "Memory"
      acceptable_part_counts: 5
      points:
        functionality: 17
        quality: 8
    -
      name: "CPU"
      acceptable_part_counts: 18
      points:
        functionality: 35
        quality: 18
    -
      name: "Computer"
      acceptable_part_counts: 3
      points:
        functionality: 15
        quality: 7
      tests:
        - "ComputerAdd"
        - "ComputerMax"
        - "ComputerRect"
